{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/login-page/login-page.component.ts","webpack:///src/app/login-page/login-page.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/scoreboard/scoreboard.component.ts","webpack:///src/app/scoreboard/scoreboard.component.html","webpack:///src/app/services/auth-interceptor.service.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/authenticationservice.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/ip.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","authService","title","Token","selector","templateUrl","styleUrls","providers","AppModule","provide","useClass","multi","declarations","bootstrap","that","key","moveMent","rightPress","leftPress","game","dx","dy","score","lives","livesRestart","bricks","brickColors","win","fastMode","kids","circle","x","y","radius","sketch","p","setup","createCanvas","createBricks","paddle","stroke","fill","rect","ball","noStroke","ellipse","height","width","forEach","item","index","checkCollisionBottom","splice","rows","cols","brickWidth","i","j","brick","w","h","color","push","drawBricks","keyPress","keyCode","keyReleased","value","restartGame","textAlign","CENTER","textStyle","BOLD","textFont","textSize","text","winGame","lostLifeText","scoreText","kidsText","livesText","draw","keyIsPressed","background","GameComponent","http","ip","data","router","p5","nativeElement","currentMessage","subscribe","message","event","setScore","navigate","post","IP","name","console","log","error","template","static","LoginPageComponent","authenticationservice","isUserValid","Boolean","testFormGroup","required","minLength","pattern","username","usernameValue","password","passwordValue","changeMessage","get","valid","login","inputUserFocusOut","NavbarComponent","length","RegisterComponent","alert","ScoreboardComponent","scoreBoard","table","document","getElementById","AuthInterceptorService","authenticationService","next","url","endsWith","handle","authReq","clone","setHeaders","Authorization","providedIn","AuthGuard","state","AuthenticationserviceService","DataService","messageSource","asObservable","IpService","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GameComponent } from './game/game.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\nimport { AuthGuard } from './services/auth.guard';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login', },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'register', component: RegisterComponent },\n  {\n    path: 'game',\n    component: GameComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'scoreboard',\n    component: ScoreboardComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: '**', component: LoginPageComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticationserviceService } from './services/authenticationservice.service';\n\nimport { DataService } from \"./services/data.service\";\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [DataService]\n})\nexport class AppComponent {\n  title = 'Breakout Game';\n\n  get token() {\n    return this.authService.Token;\n}\n\nconstructor(private authService: AuthenticationserviceService) { }\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\nimport { AuthInterceptorService } from './services/auth-interceptor.service';\nimport { DataService } from './services/data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    NavbarComponent,\n    LoginPageComponent,\n    RegisterComponent,\n    ScoreboardComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    NgbModule\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    \n    },\n    {\n      provide :DataService,\n      useClass:DataService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\nimport { identifierModuleUrl } from '@angular/compiler';\nimport { interval } from 'rxjs';\nimport { fakeAsync } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport * as P5 from 'p5';\nimport { HttpClient } from '@angular/common/http';\nimport { IpService } from '../services/ip.service';\nimport { DataService } from \"../services/data.service\";\n\nvar that: any;\n\n\n\nlet key\nlet moveMent = 150;\nlet rightPress = false\nlet leftPress = false\nlet game = true\nlet dx = 4\nlet dy = 4\nlet score = 0\nlet lives = 3\nlet livesRestart = false\nconst bricks = []\nconst brickColors = [\"#f56642\", \"#f5ad42\", \"#f5ce42\", \"#cef542\", \"#8df542\", \"#4266f5\", \"#CCFFEE\", \"#CCFFDD\"];\nlet win = false\nlet fastMode = 0\nlet kids = false;\nconst circle = {\n  x: moveMent + 50,\n  y: 380,\n  radius: 20\n}\n\n\n\nconst sketch = (p: P5) => {\n  // IN ORDER TO PLAY - CLICK THE ON THE SCREEN\n  // MOVE THE PADDLE WITH THE ARROW KEYS\n  // SHOOT USING SPACEBAR\n\n\n  p.setup = () => {\n    p.createCanvas(600, 400);\n    createBricks();\n  }\n  function paddle() {\n    p.stroke('purple')\n    p.fill('#FF6961')\n    p.rect(moveMent, 385, 100, 15, 20)\n    if (rightPress && moveMent < 500) {\n      moveMent += 10\n    }\n    if (leftPress && moveMent > 0) {\n      moveMent += -10\n    }\n  }\n\n  function ball() {\n    p.noStroke()\n    p.fill('#FBD8F8')\n    p.ellipse(circle.x, circle.y, circle.radius, circle.radius)\n    if (circle.y <= 0) {\n      dy = -dy\n      //score++\n    }\n    if (circle.y >= p.height - 15 && circle.x > moveMent - fastMode && circle.x <= moveMent + 50) {\n      dy = -dy\n      if (dx > 0) dx = -dx\n      if (dx < 0) dx = dx\n    }\n    if (circle.y >= p.height - 15 && circle.x > moveMent + 50 && circle.x <= moveMent + 100 + fastMode) {\n      dy = -dy\n      if (dx > 0) dx = dx\n      if (dx < 0) dx = -dx\n    }\n    if (circle.x >= p.width - 10 || circle.x <= 0) dx = -dx\n\n    bricks.forEach((item, index) => {\n      if (checkCollisionBottom(circle, item)) {\n        dy = -dy\n        score++\n        bricks.splice(index, 1)\n      }\n    })\n\n    if (circle.y > p.height) {\n      lives--\n      livesRestart = true\n      if (lives === 0) game = false\n    }\n    circle.x += dx\n    circle.y += dy\n  }\n\n  function createBricks() {\n    const rows = 6\n    const cols = 10\n    const brickWidth = p.width / cols\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        let brick = {\n          x: i * 58 + 10,\n          y: j * 12 + 30,\n          w: 57,\n          h: 10,\n          color: brickColors[j]\n        }\n        bricks.push(brick)\n      }\n    }\n  }\n\n  function drawBricks() {\n    bricks.forEach(brick => {\n      p.fill(brick.color)\n      p.rect(brick.x, brick.y, brick.w, brick.h)\n    })\n  }\n\n\n\n  function keyPress() {\n\n    if (p.keyCode === 75) {\n      kids = true\n    }\n    if (p.keyCode === 39) {\n      rightPress = true\n    }\n    if (p.keyCode === 37) {\n      leftPress = true\n    }\n    if (p.keyCode === 32 && livesRestart) {\n      livesRestart = false\n      circle.x = moveMent + 50\n      circle.y = 380\n    }\n    if (p.keyCode === 32 && !game) {\n      game = true\n      circle.x = moveMent + 50\n      circle.y = 380\n      score = 0\n      lives = 3\n      dy = -6\n      moveMent = 250\n      createBricks()\n    }\n  };\n  p.keyReleased = (value) => {\n    if (p.keyCode === 39) {\n      rightPress = false\n    }\n    if (p.keyCode === 37) {\n      leftPress = false\n    }\n  };\n\n\n\n  function restartGame() {\n    p.fill('#FFEEEE')\n    p.textAlign(p.CENTER);\n    p.noStroke()\n    p.textStyle(p.BOLD);\n    p.textFont('Arial');\n    p.textSize(38)\n    p.text('GAME OVER', 300, 170)\n    p.textFont('Arial');\n    p.textSize(28);\n    p.text('Final score: ' + score, 300, 200);\n    p.textSize(18);\n    p.text('Press Enter to end the game and go to scoreboard', 300, 225);\n\n\n\n  }\n\n  function winGame() {\n    p.fill('#FFEEEE')\n    p.textAlign(p.CENTER);\n    p.noStroke()\n    p.textStyle(p.BOLD);\n    p.textFont('Arial');\n    p.textSize(38)\n    p.text('YOU WON', 300, 170)\n    p.textFont('Arial');\n    p.textSize(28);\n    p.text('Final score: ' + score, 300, 200);\n    p.textSize(18);\n    p.text('Press Enter to end the game and go to scoreboard', 300, 225);\n\n\n\n  }\n\n  function lostLifeText() {\n    p.fill('#FFEEEE')\n    p.textAlign(p.CENTER);\n    p.noStroke()\n    p.textStyle(p.BOLD);\n    p.textFont('Arial');\n    p.textSize(36)\n    p.text('Life Lost', 300, 170)\n    p.textFont('Arial');\n    p.textSize(24);\n    p.text('You now have ' + lives + ' lives remaining', 300, 200);\n    p.textSize(18);\n    p.text('Press SpaceBar to restart', 300, 225);\n  }\n\n  function scoreText() {\n    p.fill('#FFEEEE')\n    p.textStyle(p.BOLD);\n    p.textAlign(p.CENTER);\n    p.noStroke()\n    p.textFont('Arial');\n    p.textSize(18);\n    p.text('Score: ' + score, 555, 20);\n  } \n  \n  function kidsText() {\n    p.fill('#FFEEEE')\n    p.textStyle(p.BOLD);\n    p.textAlign(p.CENTER);\n    p.noStroke()\n    p.textFont('Arial');\n    p.textSize(14);\n    p.text('Press \"K\" for kid mode', 300, 20);\n  }\n\n  function livesText() {\n    p.textStyle(p.BOLD);\n    p.textAlign(p.CENTER);\n    p.noStroke()\n    p.textFont('Arial');\n    p.textSize(18);\n    p.text('Lives: ' + lives, 40, 20);\n  }\n\n  function checkCollisionBottom(ball, brick) {\n    if (ball.y - 20 < brick.y && ball.x > brick.x && ball.x <= brick.x + 58) {\n      return true\n    }\n  }\n\n  p.draw = () => {\n    if (win) {\n      winGame();\n    }\n    else {\n      if (p.keyIsPressed === true) {\n        keyPress();\n\n      }\n\n      p.background('#779ecb');\n      if(kids) fastMode = 500\n      if (game && !livesRestart) ball()\n      if (livesRestart && game) lostLifeText()\n      if (!game && livesRestart) restartGame()\n      if (game) {\n        scoreText()\n        livesText()\n        drawBricks()\n        paddle()\n        kidsText()\n      }\n\n      if (score == 60) {\n        win = true;\n      }\n    }\n\n\n  };\n\n};\n\n@Component({\n  selector: 'app-game',\n  template: '<div #sketch>{{message}}</div>',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n  p5: P5;\n  message: string;\n\n  constructor(private http: HttpClient, private ip: IpService, private data: DataService, private router: Router) { }\n\n  // append canvas created by p5 instance to HTML element\n  @ViewChild('sketch', { static: true }) sketch: ElementRef;\n\n  ngOnInit(): void {\n    this.p5 = new P5(sketch, this.sketch.nativeElement);\n    this.data.currentMessage.subscribe(message => this.message = message)\n    // console.log(this.message);\n  }\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    key = event.code;\n\n    if (key === \"Enter\") {\n      this.setScore();\n      this.router.navigate(['scoreboard']);\n    }\n  }\n  setScore(): void {\n\n\n    this.http.post<any>('http://' + this.ip.IP + ':3001/score', {\n\n      name: this.data.text,\n      score: score\n\n    }).subscribe(\n      x => {\n\n        console.log(x);\n\n\n      },\n      error => { console.error(error); });\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationserviceService } from '../services/authenticationservice.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IpService } from '../services/ip.service';\nimport { Router } from '@angular/router';\n\nimport { DataService } from \"../services/data.service\";\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  testFormGroup: FormGroup;\n  isUserValid = Boolean(true);\n  message:string;\n\n  constructor(private http: HttpClient, private authenticationservice: AuthenticationserviceService,private ip:IpService,private router:Router, private data: DataService) { }\n\n  ngOnInit() {\n    this.data.currentMessage.subscribe(message => this.message = message);\n    this.testFormGroup = new FormGroup({\n      'user': new FormControl(null, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.pattern(\"^[A-Z]+.*\")\n      ]),\n      'password': new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3)\n      ])\n    });\n  }\n\n  get password() { return this.testFormGroup.get('password'); }\n  get username() { return this.testFormGroup.get('user'); }\n\n  get usernameValue(){ return this.testFormGroup.get('user').value; }\n  get passwordValue() { return this.testFormGroup.get('password').value; }\n\n  login(): void {\n    this.http.post<any>('http://' + this.ip.IP + ':3001/signin', {\n      username: this.usernameValue,\n      password: this.passwordValue\n    }).subscribe(\n      x => {\n        // console.log(x);\n        this.authenticationservice.Token = x.Token;\n        \n        this.data.changeMessage(this.usernameValue)\n\n        this.router.navigate(['game']);\n      },\n      error => { console.error(error); });\n  }\n\n\n  inputUserFocusOut() {\n    if (!this.testFormGroup.get('user').valid) {\n      this.isUserValid = false;\n      return;\n    }\n\n    this.isUserValid = true;\n  }\n\n\n  logout() {\n    this.authenticationservice.Token = '';\n  }\n\n}\n\n\n\n\n\n\n  \n\n  \n\n  \n   \n  \n\n","<div class=\"login-container body\">\n        <section class=\"login\" id=\"login\">\n          <header>\n            <h2 >BreakOut Game</h2>\n            <h4>Login</h4>\n          </header>\n          <form class=\"login-form\"  [formGroup]=\"testFormGroup\" (ngSubmit)=\"login()\">\n            <input type=\"text\" class=\"login-input\" placeholder=\"User\" required autofocus  (focusout)=\"inputUserFocusOut()\" formControlName=\"user\" />\n            <label id=\"errorText\" *ngIf=\"!isUserValid\">\n              Wrong username\n           </label>\n            <input type=\"password\" class=\"login-input\" placeholder=\"Password\" formControlName=\"password\" required/>\n            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n              <label id=\"errorText\" *ngIf=\"!this.testFormGroup.get('password').valid\">\n                Wrong password\n              </label>\n            </div>\n            <div class=\"submit-container\">\n              <button type=\"submit\" class=\"login-button\">SIGN IN</button>\n            </div>\n         \n              </form>\n              <div class=\"form-group\">\n\n            </div>\n        </section>\n        <p>2020 - <a href=\"https://www.twitch.tv/ellibesh\"> Designed by Dilber</a></p>\n       \n        \n      </div>\n      ","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationserviceService } from '../services/authenticationservice.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authenticationservice:AuthenticationserviceService) { }\n  \n  public IsloggedIn():boolean{\n    if (this.authenticationservice.Token.length > 0){\n      return true;\n    }\n    return false;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <a class=\"navbar-brand \" >\n            <img src=\"../../favicon.ico\" alt=\"Logo\" id=\"logo\">\n        </a>\n        <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#collapse_target\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapse_target\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" *ngIf = \"!this.IsloggedIn()\" [routerLink]=\"['/register']\">Sign Up</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" *ngIf = \"!this.IsloggedIn()\"[routerLink]=\"['/login']\">Sign In</a>\n                </li>\n                <li class=\"nav-link\">\n                    <a class=\"nav-link\" *ngIf = \"this.IsloggedIn()\"  [routerLink]=\"['/game']\">Play Game</a>\n                </li>\n                <li class=\"nav-link\">\n                    <a class=\"nav-link\" *ngIf = \"this.IsloggedIn()\"  [routerLink]=\"['/scoreboard']\">Show Scores</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationserviceService } from '../services/authenticationservice.service';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IpService } from '../services/ip.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  testFormGroup: FormGroup;\n  isUserValid = Boolean(true);\n\n  constructor(private http: HttpClient, private authenticationservice: AuthenticationserviceService,private ip:IpService) { }\n\n  ngOnInit() {\n    this.testFormGroup = new FormGroup({\n      'user': new FormControl(null, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.pattern(\"^[A-Z]+.*\")\n      ]),\n      'password': new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3)\n      ])    \n    });\n  }\n\n  get password() { return this.testFormGroup.get('password'); }\n  get username() { return this.testFormGroup.get('user'); }\n\n  get usernameValue(){ return this.testFormGroup.get('user').value; }\n  get passwordValue() { return this.testFormGroup.get('password').value; }\n\n  login(): void {\n    \n    this.http.post<any>('http://' + this.ip.IP + ':3001/register', {\n      \n      username: this.usernameValue,\n      password: this.passwordValue\n\n    }).subscribe(\n      x => {\n         \n        console.log(x);\n        if(x==\"LUL\"){\n          \n        }\n      },\n      error => { console.error(error); });\n  }\n\n  onConfigure()\n  {\n    alert(\"Glückwunsch\");\n  }\n\n  inputUserFocusOut()\n  {\n    if (!this.testFormGroup.get('user').valid) {\n      this.isUserValid = false;\n      return;\n    }\n\n    this.isUserValid = true;\n  }\n}\n","\n                                 \n\n\n\n    <div class=\"login-container body\">\n        <section class=\"login\" id=\"login\">\n          <header>\n            <h2 >BreakOut Game</h2>\n            <h4>Sign Up</h4>\n          </header>\n          <form class=\"login-form\"  [formGroup]=\"testFormGroup\" (ngSubmit)=\"this.login()\">\n            <input type=\"text\" class=\"login-input\" placeholder=\"User\" required autofocus  (focusout)=\"inputUserFocusOut()\" formControlName=\"user\" />\n            <label id=\"errorText\" *ngIf=\"!isUserValid\">\n              Wrong username\n           </label>\n            <input type=\"password\" class=\"login-input\" placeholder=\"Password\" formControlName=\"password\" required/>\n            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n              <label id=\"errorText\" *ngIf=\"!this.testFormGroup.get('password').valid\">\n                Wrong password\n              </label>\n            </div>\n            <div class=\"submit-container\">\n              <button type=\"submit\" class=\"login-button\">SIGN UP</button>\n            </div>\n         \n              </form>\n          \n              \n        </section>\n        <p>2020 - <a href=\"https://www.twitch.tv/ellibesh\"> Designed by Dilber</a></p>\n       \n        \n      </div>\n      ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationserviceService } from '../services/authenticationservice.service';\nimport { IpService } from '../services/ip.service';\n\n@Component({\n  selector: 'app-scoreboard',\n  templateUrl: './scoreboard.component.html',\n  styleUrls: ['./scoreboard.component.scss']\n})\n\nexport class ScoreboardComponent implements OnInit {\n\n  constructor(private http: HttpClient, private authService: AuthenticationserviceService,private ip:IpService) { }\n  public scoreBoard: any[] = [];\n  table;\n  message:string;\n\n  ngOnInit() {\n    \n    this.table = document.getElementById('table');\n    console.log(this.authService.Token)\n    this.http.post<any>('http://' + this.ip.IP + ':3001/scoreboard', {\n\n    }\n    ).subscribe(\n      x => {\n        this.scoreBoard = x;\n      },\n      error => {\n        console.log(error);\n    });\n  }\n}\n","<h1>\n    ScoreBoard Break Out\n</h1>\n<table id=\"table\" class=\"table table-dark\">\n    <tr>\n\n        <th>Position</th>\n        <th>Player </th>\n        <th>High Scores</th>\n    </tr>\n    <tr *ngFor=\"let scoreItem of scoreBoard;let i = index\">\n        <td>{{i+1}}</td>\n\n        <td>{{scoreItem.name}}</td>\n        <td>{{scoreItem.score}}</td>\n    </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpInterceptor } from '@angular/common/http';\nimport { AuthenticationserviceService } from './authenticationservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private authenticationService:AuthenticationserviceService) { }\n\n  intercept(req:HttpRequest<any>,next:HttpHandler){\n    // console.log(this.authenticationService.Token);\n    if(req.url.endsWith('s') || (req.url.endsWith('ss'))){\n      return next.handle(req);\n    }\n    const authReq = req.clone(\n      { \n        setHeaders: { \n          Authorization: this.authenticationService.Token \n        } \n      });\n    return next.handle(authReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationserviceService } from './authenticationservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(public authenticationService:AuthenticationserviceService,public router:Router) {}\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.authenticationService.Token.length > 0){\n         return true;\n      }\n      return false;  \n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationserviceService {\n\n  public Token = '';\n  \n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Subject }    from 'rxjs';\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  private messageSource =new Subject<string>();\r\n  currentMessage = this.messageSource.asObservable();\r\n text: string;\r\n  constructor() { }\r\n\r\n  changeMessage(message: string) {\r\n\r\n\r\n    this.currentMessage.subscribe(message => this.text = message)\r\n    \r\n    this.messageSource.next(message)\r\n\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpService {\n\n  constructor() { }\n  \n  public IP:string ='127.0.0.1';\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}